
import copy

a = 1
b = a
print(a, b)
print(id(1), id(a), id(b))  # 地址相同

a = 2
print(id(1), id(a), id(b))  # a地址改变

b = copy.copy(a)
print(id(2), id(a), id(b))  # 地址相同
c = copy.deepcopy(a)
print(id(2), id(a), id(b), id(c))   # 地址相同（不可变对象深浅拷贝都一样）

# 可变对象(内容为不可变对象)
l1 = [1,2,3,'a','b']
l2 = copy.copy(l1)
print(id(l1), id(l2), l2)   # 地址不一样, 值一样

l3 = copy.deepcopy(l1)
print(id(l1), id(l2), id(l3), l3)   # 地址不一样

# 可变对象(内容有可变对象)
a = [1,2,(1,2)]
l1 = [1,'a','b', a]
l2 = copy.copy(l1)
print(id(l1), id(l2), l2)   # 地址不一样, 值一样（但内部的a地址一样, 修改a会同时修改）
l1[0] = 222     # 修改内部不可变对象
l1[3][1] = 111  # 修改内部可变对象
print(l1, l2)   # [222, 'a', 'b', [1, 111, (1, 2)]]    l1中不可变对象修改不影l2
                # [1, 'a', 'b', [1, 111, (1, 2)]]      l1中的可变对象修改后影响l2

l3 = copy.deepcopy(l1)
print(id(l1), id(l2), id(l3), l3)   # 地址不一样，值一样
l1[0] = 333     # 修改内部不可变对象
l1[3][1] = 444  # 修改内部可变对象
print(l1, l2, l3)   # [333, 'a', 'b', [1, 444, (1, 2)]]  修改不可变对象不影响其他
                    # [1, 'a', 'b', [1, 444, (1, 2)]]    修改可变对象，影响浅拷贝对象
                    # [222, 'a', 'b', [1, 111, (1, 2)]]  深拷贝，不论修改可变还是不可变均不影响
